@model VendasProdutos.Models.Venda

@{
    ViewData["Title"] = "Create";
    
}

<h1>Create</h1>

<h4>Venda</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
               
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors).Distinct())
                    {
                        @error.ErrorMessage
                    }
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
             </div>
        }

        <form asp-action="Create">
           
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProdutoId" class="control-label"></label>
                <select asp-for="ProdutoId" class ="form-control" asp-items="ViewBag.ProdutoId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Quantidade" class="control-label"></label>
                <input asp-for="Quantidade" class="form-control" />
                
            </div>
            <div class="form-group">
                <label asp-for="DataVenda" class="control-label"></label>
                <input asp-for="DataVenda" class="form-control" />
                <span asp-validation-for="DataVenda" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
